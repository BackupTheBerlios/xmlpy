XML-based Python Specification

Version 0.1

0. License

        Copyright (c) 2001, Fraunhofer ISST (http://www.isst.fhg.de)
        All rights reserved.

        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions
        are met:

             Redistributions of source code must retain the above copyright
             notice, this list of conditions and the following disclaimer.
             Redistributions in binary form must reproduce the above
             copyright notice, this list of conditions and the following
             disclaimer in the documentation and/or other materials provided
             with the distribution.
             Neither the name of the Fraunhofer ISST, Germany nor the names of its
             contributors may be used to endorse or promote products derived
             from this software without specific prior written permission.

        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
        "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
        LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
        FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
        REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
        INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
        BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
        LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
        LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
        ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF

1. Introduction

  **XML-based Python** is a XML-based syntax for the object-oriented programming
  language "Python":http://www.python.org/ for scripting. The idea is to generate
  XML-based Python programs by XML stylesheet transformations
  ("XSLT":http://www.w3c.org/) and translate the resulting XML document into
  normal Python syntax for execution. One application for this idea are to
  tranform a dynamic HTML template like a "Python Server Page" (PSP) into servlet
  code for an application server for example the "Webware
  Server.":http://webware.sourceforge.net
  
  Look to the following simple example:
  
  <pre>
  &lt;?xml version = "1.0" encoding = "UTF8"?&gt;
  &lt;!DOCTYPE python SYSTEM "xmlpy.dtd"&gt;
  &lt;python&gt;
    &lt;def name = "fac"&gt;
      &lt;parameter name = "x" default = "1"/&gt;
      &lt;if&gt;
        &lt;condition expr = "x == 1"&gt;
          &lt;return&gt;
            &lt;expr&gt;1&lt;/expr&gt;
          &lt;/return&gt;
        &lt;/condition&gt;
        &lt;else&gt;
          &lt;return&gt;
            &lt;expr&gt;x * fac(x-1)&lt;/expr&gt;
          &lt;/return&gt;
        &lt;/else&gt;
      &lt;/if&gt;
    &lt;/def&gt;
    &lt;print&gt;
      &lt;expr&gt;fac(3)&lt;/expr&gt;
    &lt;/print&gt;
  &lt;/python&gt;
  </pre>
  
  This xmlpy document is equivalent to the following Python program:
  
  def fac(x=1):
    if x == 1:
      return 1
    else:
      return x * fac(x-1)
  
  print fac(3)
  
  This looks quite simple!
  
2. XML scheme
  
  **xmlpy** is defined by a documented XML scheme ("xmlpy.xsd"). Additionally
  there is a DTD ("xmlpy.dtd"). The design principle for the XML scheme is to
  translate all Python statements to XML elements. Expressions can be written as
  usual. The base syntax is Python Version 2.1.
  
